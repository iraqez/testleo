# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import leonardo.forms.fields.multiple
import feincms.contrib.fields
import feincms.extensions
import feincms.module.extensions.datepublisher
import feincms.module.mixins
import leonardo.module.web.widgets.mixins
import markupfield.fields


class Migration(migrations.Migration):

    dependencies = [
        ('dbtemplates', '0002_auto_20170130_1907'),
        ('media', '0005_auto_20170130_1907'),
        ('sites', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('parameters', feincms.contrib.fields.JSONField(null=True, editable=False)),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('urlconf_path', models.CharField(max_length=100, choices=[('leonardo.module.media.apps.category_simple', 'Simple list of directories'), ('leonardo.module.search.apps.search', 'Search'), ('leonardo.module.media.apps.category_nested', 'List of directories'), ('leonardo_admin.apps.admin', 'Admin Site')], verbose_name='application')),
            ],
            options={
                'db_table': 'web_page_applicationwidget',
                'permissions': [],
                'verbose_name_plural': 'External applications',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'External application',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='BreadcrumbsWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('display_active', models.NullBooleanField(default=True, verbose_name='Display active')),
                ('display_in_nav', models.NullBooleanField(default=True, verbose_name='Display in navigation')),
                ('orientation', models.CharField(default='horizontal', max_length=20, choices=[('vertical', 'Vertical'), ('horizon', 'Horizon')], verbose_name='Orientation')),
                ('root_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='Root node label')),
            ],
            options={
                'db_table': 'web_page_breadcrumbswidget',
                'permissions': [],
                'verbose_name_plural': 'Breadcrumb trails',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'Breadcrumb trail',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='ClientInfoWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('show_info', leonardo.forms.fields.multiple.MultiSelectField(default='browser', max_length=255, choices=[('browser', 'browser information'), ('os', 'operating system'), ('ip', 'IP address'), ('hostname', 'hostname')], verbose_name='show info')),
            ],
            options={
                'db_table': 'web_page_clientinfowidget',
                'permissions': [],
                'verbose_name_plural': 'client info',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'client info',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='ContentNavigationWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('display_active', models.NullBooleanField(default=True, verbose_name='Display active')),
                ('display_in_nav', models.NullBooleanField(default=True, verbose_name='Display in navigation')),
                ('orientation', models.CharField(default='horizontal', max_length=20, choices=[('vertical', 'Vertical'), ('horizon', 'Horizon')], verbose_name='Orientation')),
                ('include_contextual_pages', models.BooleanField(default=False, verbose_name='Display included pages')),
                ('include_text_headers', models.BooleanField(default=False, verbose_name='Display widget headers')),
            ],
            options={
                'db_table': 'web_page_contentnavigationwidget',
                'permissions': [],
                'verbose_name_plural': 'Content navigations',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'Content navigation',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='ContextNavigationWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('objects_per_page', models.PositiveIntegerField(default=6, blank=True, verbose_name='Objects per page')),
                ('objects_per_row', models.PositiveIntegerField(default=3, blank=True, verbose_name='Objects per row')),
                ('pagination_style', models.CharField(default='paginator', max_length=50, choices=[('paginator', 'Paginator'), ('cycle', 'Cycle'), ('slide', 'Slide'), ('grid', 'Grid')], verbose_name='Pagination Style')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('display_active', models.NullBooleanField(default=True, verbose_name='Display active')),
                ('display_in_nav', models.NullBooleanField(default=True, verbose_name='Display in navigation')),
                ('orientation', models.CharField(default='horizontal', max_length=20, choices=[('vertical', 'Vertical'), ('horizon', 'Horizon')], verbose_name='Orientation')),
                ('page_region', models.CharField(default='preview', max_length=255, help_text='Which region of selected pages do you wish to display.', choices=[('col3', 'Content'), ('col1', 'Left sidebar'), ('col2', 'Right sidebar'), ('header', 'Header'), ('footer', 'Footer'), ('toolbar', 'Toolbar'), ('preview', 'Preview'), ('helper', 'Helper')], verbose_name='Region to display')),
                ('depth', models.IntegerField(default=1, help_text='Depth to which display child pages.', choices=[(0, 'self'), (1, 'one level'), (2, 'all levels')], verbose_name='Depth')),
                ('link_style', models.CharField(blank=True, choices=[('', 'none'), ('link', 'link'), ('button', 'button')], default='link', help_text='Visual style of links to displayed pages.', max_length=255, verbose_name='Link style')),
                ('link_text', models.CharField(default='', blank=True, help_text="Arbitrary text of links. If empty, page's title will be used instead.", max_length=255, verbose_name='Link label')),
            ],
            options={
                'db_table': 'web_page_contextnavigationwidget',
                'permissions': [],
                'verbose_name_plural': 'Linked pages',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'Linked page',
            },
            bases=(models.Model, leonardo.module.web.widgets.mixins.ListMixin, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='DownloadItemWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
            ],
            options={
                'db_table': 'web_page_downloaditemwidget',
                'permissions': [],
                'verbose_name_plural': 'download items',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'download item',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='DownloadListWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('objects_per_page', models.PositiveIntegerField(default=6, blank=True, verbose_name='Objects per page')),
                ('objects_per_row', models.PositiveIntegerField(default=3, blank=True, verbose_name='Objects per row')),
                ('pagination_style', models.CharField(default='paginator', max_length=50, choices=[('paginator', 'Paginator'), ('cycle', 'Cycle'), ('slide', 'Slide'), ('grid', 'Grid')], verbose_name='Pagination Style')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
            ],
            options={
                'db_table': 'web_page_downloadlistwidget',
                'permissions': [],
                'verbose_name_plural': 'download lists',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'download list',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin, leonardo.module.web.widgets.mixins.ListMixin),
        ),
        migrations.CreateModel(
            name='FeedReaderWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('objects_per_page', models.PositiveIntegerField(default=6, blank=True, verbose_name='Objects per page')),
                ('objects_per_row', models.PositiveIntegerField(default=3, blank=True, verbose_name='Objects per row')),
                ('pagination_style', models.CharField(default='paginator', max_length=50, choices=[('paginator', 'Paginator'), ('cycle', 'Cycle'), ('slide', 'Slide'), ('grid', 'Grid')], verbose_name='Pagination Style')),
                ('source_address', models.CharField(max_length=255, verbose_name='Source Address')),
                ('cache_validity', models.PositiveIntegerField(default=3600, verbose_name='Cache validity')),
                ('cache_data', models.TextField(blank=True, verbose_name='Cache data')),
                ('cache_updated', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Cache update')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('max_items', models.IntegerField(default=5, verbose_name='max. items')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
            ],
            options={
                'db_table': 'web_page_feedreaderwidget',
                'permissions': [],
                'verbose_name_plural': 'feed readers',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'feed reader',
            },
            bases=(leonardo.module.web.widgets.mixins.JSONContentMixin, models.Model, feincms.extensions.ExtensionsMixin, leonardo.module.web.widgets.mixins.ListMixin),
        ),
        migrations.CreateModel(
            name='FlashObjectWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('version', models.CharField(max_length=255, choices=[('10.0.0', 'version 10 and newer'), ('9.0.0', 'version 9 and newer')], verbose_name='flash version')),
                ('width', models.CharField(default='640', max_length=255, verbose_name='width')),
                ('height', models.CharField(default='480', max_length=255, verbose_name='height')),
                ('vars', models.TextField(default='var vars = {\n}\n', verbose_name='variables')),
                ('params', models.TextField(default='var params = {\n}\n', verbose_name='parameters')),
                ('attrs', models.TextField(default='var attrs = {\n}\n', verbose_name='attributes')),
            ],
            options={
                'db_table': 'web_page_flashobjectwidget',
                'permissions': [],
                'verbose_name_plural': 'flash objects',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'flash object',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='HtmlTextWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('text', models.TextField(default='<p>Empty element</p>', blank=True, verbose_name='text')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
            ],
            options={
                'db_table': 'web_page_htmltextwidget',
                'permissions': [],
                'verbose_name_plural': 'HTML texts',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'HTML text',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='IconWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('icon', models.CharField(max_length=255, choices=[('adjust', 'f042'), ('adn', 'f170'), ('align-center', 'f037'), ('align-justify', 'f039'), ('align-left', 'f036'), ('align-right', 'f038'), ('ambulance', 'f0f9'), ('anchor', 'f13d'), ('android', 'f17b'), ('angellist', 'f209'), ('angle-double-down', 'f103'), ('angle-double-left', 'f100'), ('angle-double-right', 'f101'), ('angle-double-up', 'f102'), ('angle-down', 'f107'), ('angle-left', 'f104'), ('angle-right', 'f105'), ('angle-up', 'f106'), ('apple', 'f179'), ('archive', 'f187'), ('area-chart', 'f1fe'), ('arrow-circle-down', 'f0ab'), ('arrow-circle-left', 'f0a8'), ('arrow-circle-o-down', 'f01a'), ('arrow-circle-o-left', 'f190'), ('arrow-circle-o-right', 'f18e'), ('arrow-circle-o-up', 'f01b'), ('arrow-circle-right', 'f0a9'), ('arrow-circle-up', 'f0aa'), ('arrow-down', 'f063'), ('arrow-left', 'f060'), ('arrow-right', 'f061'), ('arrow-up', 'f062'), ('arrows', 'f047'), ('arrows-alt', 'f0b2'), ('arrows-h', 'f07e'), ('arrows-v', 'f07d'), ('asterisk', 'f069'), ('at', 'f1fa'), ('automobile', 'f1b9'), ('backward', 'f04a'), ('ban', 'f05e'), ('bank', 'f19c'), ('bar-chart', 'f080'), ('bar-chart-o', 'f080'), ('barcode', 'f02a'), ('bars', 'f0c9'), ('bed', 'f236'), ('beer', 'f0fc'), ('behance', 'f1b4'), ('behance-square', 'f1b5'), ('bell', 'f0f3'), ('bell-o', 'f0a2'), ('bell-slash', 'f1f6'), ('bell-slash-o', 'f1f7'), ('bicycle', 'f206'), ('binoculars', 'f1e5'), ('birthday-cake', 'f1fd'), ('bitbucket', 'f171'), ('bitbucket-square', 'f172'), ('bitcoin', 'f15a'), ('bold', 'f032'), ('bolt', 'f0e7'), ('bomb', 'f1e2'), ('book', 'f02d'), ('bookmark', 'f02e'), ('bookmark-o', 'f097'), ('briefcase', 'f0b1'), ('btc', 'f15a'), ('bug', 'f188'), ('building', 'f1ad'), ('building-o', 'f0f7'), ('bullhorn', 'f0a1'), ('bullseye', 'f140'), ('bus', 'f207'), ('buysellads', 'f20d'), ('cab', 'f1ba'), ('calculator', 'f1ec'), ('calendar', 'f073'), ('calendar-o', 'f133'), ('camera', 'f030'), ('camera-retro', 'f083'), ('car', 'f1b9'), ('caret-down', 'f0d7'), ('caret-left', 'f0d9'), ('caret-right', 'f0da'), ('caret-square-o-down', 'f150'), ('caret-square-o-left', 'f191'), ('caret-square-o-right', 'f152'), ('caret-square-o-up', 'f151'), ('caret-up', 'f0d8'), ('cart-arrow-down', 'f218'), ('cart-plus', 'f217'), ('cc', 'f20a'), ('cc-amex', 'f1f3'), ('cc-discover', 'f1f2'), ('cc-mastercard', 'f1f1'), ('cc-paypal', 'f1f4'), ('cc-stripe', 'f1f5'), ('cc-visa', 'f1f0'), ('certificate', 'f0a3'), ('chain', 'f0c1'), ('chain-broken', 'f127'), ('check', 'f00c'), ('check-circle', 'f058'), ('check-circle-o', 'f05d'), ('check-square', 'f14a'), ('check-square-o', 'f046'), ('chevron-circle-down', 'f13a'), ('chevron-circle-left', 'f137'), ('chevron-circle-right', 'f138'), ('chevron-circle-up', 'f139'), ('chevron-down', 'f078'), ('chevron-left', 'f053'), ('chevron-right', 'f054'), ('chevron-up', 'f077'), ('child', 'f1ae'), ('circle', 'f111'), ('circle-o', 'f10c'), ('circle-o-notch', 'f1ce'), ('circle-thin', 'f1db'), ('clipboard', 'f0ea'), ('clock-o', 'f017'), ('close', 'f00d'), ('cloud', 'f0c2'), ('cloud-download', 'f0ed'), ('cloud-upload', 'f0ee'), ('cny', 'f157'), ('code', 'f121'), ('code-fork', 'f126'), ('codepen', 'f1cb'), ('coffee', 'f0f4'), ('cog', 'f013'), ('cogs', 'f085'), ('columns', 'f0db'), ('comment', 'f075'), ('comment-o', 'f0e5'), ('comments', 'f086'), ('comments-o', 'f0e6'), ('compass', 'f14e'), ('compress', 'f066'), ('connectdevelop', 'f20e'), ('copy', 'f0c5'), ('copyright', 'f1f9'), ('credit-card', 'f09d'), ('crop', 'f125'), ('crosshairs', 'f05b'), ('css3', 'f13c'), ('cube', 'f1b2'), ('cubes', 'f1b3'), ('cut', 'f0c4'), ('cutlery', 'f0f5'), ('dashboard', 'f0e4'), ('dashcube', 'f210'), ('database', 'f1c0'), ('dedent', 'f03b'), ('delicious', 'f1a5'), ('desktop', 'f108'), ('deviantart', 'f1bd'), ('diamond', 'f219'), ('digg', 'f1a6'), ('dollar', 'f155'), ('dot-circle-o', 'f192'), ('download', 'f019'), ('dribbble', 'f17d'), ('dropbox', 'f16b'), ('drupal', 'f1a9'), ('edit', 'f044'), ('eject', 'f052'), ('ellipsis-h', 'f141'), ('ellipsis-v', 'f142'), ('empire', 'f1d1'), ('envelope', 'f0e0'), ('envelope-o', 'f003'), ('envelope-square', 'f199'), ('eraser', 'f12d'), ('eur', 'f153'), ('euro', 'f153'), ('exchange', 'f0ec'), ('exclamation', 'f12a'), ('exclamation-circle', 'f06a'), ('exclamation-triangle', 'f071'), ('expand', 'f065'), ('external-link', 'f08e'), ('external-link-square', 'f14c'), ('eye', 'f06e'), ('eye-slash', 'f070'), ('eyedropper', 'f1fb'), ('facebook', 'f09a'), ('facebook-f', 'f09a'), ('facebook-official', 'f230'), ('facebook-square', 'f082'), ('fast-backward', 'f049'), ('fast-forward', 'f050'), ('fax', 'f1ac'), ('female', 'f182'), ('fighter-jet', 'f0fb'), ('file', 'f15b'), ('file-archive-o', 'f1c6'), ('file-audio-o', 'f1c7'), ('file-code-o', 'f1c9'), ('file-excel-o', 'f1c3'), ('file-image-o', 'f1c5'), ('file-movie-o', 'f1c8'), ('file-o', 'f016'), ('file-pdf-o', 'f1c1'), ('file-photo-o', 'f1c5'), ('file-picture-o', 'f1c5'), ('file-powerpoint-o', 'f1c4'), ('file-sound-o', 'f1c7'), ('file-text', 'f15c'), ('file-text-o', 'f0f6'), ('file-video-o', 'f1c8'), ('file-word-o', 'f1c2'), ('file-zip-o', 'f1c6'), ('files-o', 'f0c5'), ('film', 'f008'), ('filter', 'f0b0'), ('fire', 'f06d'), ('fire-extinguisher', 'f134'), ('flag', 'f024'), ('flag-checkered', 'f11e'), ('flag-o', 'f11d'), ('flash', 'f0e7'), ('flask', 'f0c3'), ('flickr', 'f16e'), ('floppy-o', 'f0c7'), ('folder', 'f07b'), ('folder-o', 'f114'), ('folder-open', 'f07c'), ('folder-open-o', 'f115'), ('font', 'f031'), ('forumbee', 'f211'), ('forward', 'f04e'), ('foursquare', 'f180'), ('frown-o', 'f119'), ('futbol-o', 'f1e3'), ('gamepad', 'f11b'), ('gavel', 'f0e3'), ('gbp', 'f154'), ('ge', 'f1d1'), ('gear', 'f013'), ('gears', 'f085'), ('genderless', 'f1db'), ('gift', 'f06b'), ('git', 'f1d3'), ('git-square', 'f1d2'), ('github', 'f09b'), ('github-alt', 'f113'), ('github-square', 'f092'), ('gittip', 'f184'), ('glass', 'f000'), ('globe', 'f0ac'), ('google', 'f1a0'), ('google-plus', 'f0d5'), ('google-plus-square', 'f0d4'), ('google-wallet', 'f1ee'), ('graduation-cap', 'f19d'), ('gratipay', 'f184'), ('group', 'f0c0'), ('h-square', 'f0fd'), ('hacker-news', 'f1d4'), ('hand-o-down', 'f0a7'), ('hand-o-left', 'f0a5'), ('hand-o-right', 'f0a4'), ('hand-o-up', 'f0a6'), ('hdd-o', 'f0a0'), ('header', 'f1dc'), ('headphones', 'f025'), ('heart', 'f004'), ('heart-o', 'f08a'), ('heartbeat', 'f21e'), ('history', 'f1da'), ('home', 'f015'), ('hospital-o', 'f0f8'), ('hotel', 'f236'), ('html5', 'f13b'), ('ils', 'f20b'), ('image', 'f03e'), ('inbox', 'f01c'), ('indent', 'f03c'), ('info', 'f129'), ('info-circle', 'f05a'), ('inr', 'f156'), ('instagram', 'f16d'), ('institution', 'f19c'), ('ioxhost', 'f208'), ('italic', 'f033'), ('joomla', 'f1aa'), ('jpy', 'f157'), ('jsfiddle', 'f1cc'), ('key', 'f084'), ('keyboard-o', 'f11c'), ('krw', 'f159'), ('language', 'f1ab'), ('laptop', 'f109'), ('lastfm', 'f202'), ('lastfm-square', 'f203'), ('leaf', 'f06c'), ('leanpub', 'f212'), ('legal', 'f0e3'), ('lemon-o', 'f094'), ('level-down', 'f149'), ('level-up', 'f148'), ('life-bouy', 'f1cd'), ('life-buoy', 'f1cd'), ('life-ring', 'f1cd'), ('life-saver', 'f1cd'), ('lightbulb-o', 'f0eb'), ('line-chart', 'f201'), ('link', 'f0c1'), ('linkedin', 'f0e1'), ('linkedin-square', 'f08c'), ('linux', 'f17c'), ('list', 'f03a'), ('list-alt', 'f022'), ('list-ol', 'f0cb'), ('list-ul', 'f0ca'), ('location-arrow', 'f124'), ('lock', 'f023'), ('long-arrow-down', 'f175'), ('long-arrow-left', 'f177'), ('long-arrow-right', 'f178'), ('long-arrow-up', 'f176'), ('magic', 'f0d0'), ('magnet', 'f076'), ('mail-forward', 'f064'), ('mail-reply', 'f112'), ('mail-reply-all', 'f122'), ('male', 'f183'), ('map-marker', 'f041'), ('mars', 'f222'), ('mars-double', 'f227'), ('mars-stroke', 'f229'), ('mars-stroke-h', 'f22b'), ('mars-stroke-v', 'f22a'), ('maxcdn', 'f136'), ('meanpath', 'f20c'), ('medium', 'f23a'), ('medkit', 'f0fa'), ('meh-o', 'f11a'), ('mercury', 'f223'), ('microphone', 'f130'), ('microphone-slash', 'f131'), ('minus', 'f068'), ('minus-circle', 'f056'), ('minus-square', 'f146'), ('minus-square-o', 'f147'), ('mobile', 'f10b'), ('mobile-phone', 'f10b'), ('money', 'f0d6'), ('moon-o', 'f186'), ('mortar-board', 'f19d'), ('motorcycle', 'f21c'), ('music', 'f001'), ('navicon', 'f0c9'), ('neuter', 'f22c'), ('newspaper-o', 'f1ea'), ('openid', 'f19b'), ('outdent', 'f03b'), ('pagelines', 'f18c'), ('paint-brush', 'f1fc'), ('paper-plane', 'f1d8'), ('paper-plane-o', 'f1d9'), ('paperclip', 'f0c6'), ('paragraph', 'f1dd'), ('paste', 'f0ea'), ('pause', 'f04c'), ('paw', 'f1b0'), ('paypal', 'f1ed'), ('pencil', 'f040'), ('pencil-square', 'f14b'), ('pencil-square-o', 'f044'), ('phone', 'f095'), ('phone-square', 'f098'), ('photo', 'f03e'), ('picture-o', 'f03e'), ('pie-chart', 'f200'), ('pied-piper', 'f1a7'), ('pied-piper-alt', 'f1a8'), ('pinterest', 'f0d2'), ('pinterest-p', 'f231'), ('pinterest-square', 'f0d3'), ('plane', 'f072'), ('play', 'f04b'), ('play-circle', 'f144'), ('play-circle-o', 'f01d'), ('plug', 'f1e6'), ('plus', 'f067'), ('plus-circle', 'f055'), ('plus-square', 'f0fe'), ('plus-square-o', 'f196'), ('power-off', 'f011'), ('print', 'f02f'), ('puzzle-piece', 'f12e'), ('qq', 'f1d6'), ('qrcode', 'f029'), ('question', 'f128'), ('question-circle', 'f059'), ('quote-left', 'f10d'), ('quote-right', 'f10e'), ('ra', 'f1d0'), ('random', 'f074'), ('rebel', 'f1d0'), ('recycle', 'f1b8'), ('reddit', 'f1a1'), ('reddit-square', 'f1a2'), ('refresh', 'f021'), ('remove', 'f00d'), ('renren', 'f18b'), ('reorder', 'f0c9'), ('repeat', 'f01e'), ('reply', 'f112'), ('reply-all', 'f122'), ('retweet', 'f079'), ('rmb', 'f157'), ('road', 'f018'), ('rocket', 'f135'), ('rotate-left', 'f0e2'), ('rotate-right', 'f01e'), ('rouble', 'f158'), ('rss', 'f09e'), ('rss-square', 'f143'), ('rub', 'f158'), ('ruble', 'f158'), ('rupee', 'f156'), ('save', 'f0c7'), ('scissors', 'f0c4'), ('search', 'f002'), ('search-minus', 'f010'), ('search-plus', 'f00e'), ('sellsy', 'f213'), ('send', 'f1d8'), ('send-o', 'f1d9'), ('server', 'f233'), ('share', 'f064'), ('share-alt', 'f1e0'), ('share-alt-square', 'f1e1'), ('share-square', 'f14d'), ('share-square-o', 'f045'), ('shekel', 'f20b'), ('sheqel', 'f20b'), ('shield', 'f132'), ('ship', 'f21a'), ('shirtsinbulk', 'f214'), ('shopping-cart', 'f07a'), ('sign-in', 'f090'), ('sign-out', 'f08b'), ('signal', 'f012'), ('simplybuilt', 'f215'), ('sitemap', 'f0e8'), ('skyatlas', 'f216'), ('skype', 'f17e'), ('slack', 'f198'), ('sliders', 'f1de'), ('slideshare', 'f1e7'), ('smile-o', 'f118'), ('soccer-ball-o', 'f1e3'), ('sort', 'f0dc'), ('sort-alpha-asc', 'f15d'), ('sort-alpha-desc', 'f15e'), ('sort-amount-asc', 'f160'), ('sort-amount-desc', 'f161'), ('sort-asc', 'f0de'), ('sort-desc', 'f0dd'), ('sort-down', 'f0dd'), ('sort-numeric-asc', 'f162'), ('sort-numeric-desc', 'f163'), ('sort-up', 'f0de'), ('soundcloud', 'f1be'), ('space-shuttle', 'f197'), ('spinner', 'f110'), ('spoon', 'f1b1'), ('spotify', 'f1bc'), ('square', 'f0c8'), ('square-o', 'f096'), ('stack-exchange', 'f18d'), ('stack-overflow', 'f16c'), ('star', 'f005'), ('star-half', 'f089'), ('star-half-empty', 'f123'), ('star-half-full', 'f123'), ('star-half-o', 'f123'), ('star-o', 'f006'), ('steam', 'f1b6'), ('steam-square', 'f1b7'), ('step-backward', 'f048'), ('step-forward', 'f051'), ('stethoscope', 'f0f1'), ('stop', 'f04d'), ('street-view', 'f21d'), ('strikethrough', 'f0cc'), ('stumbleupon', 'f1a4'), ('stumbleupon-circle', 'f1a3'), ('subscript', 'f12c'), ('subway', 'f239'), ('suitcase', 'f0f2'), ('sun-o', 'f185'), ('superscript', 'f12b'), ('support', 'f1cd'), ('table', 'f0ce'), ('tablet', 'f10a'), ('tachometer', 'f0e4'), ('tag', 'f02b'), ('tags', 'f02c'), ('tasks', 'f0ae'), ('taxi', 'f1ba'), ('tencent-weibo', 'f1d5'), ('terminal', 'f120'), ('text-height', 'f034'), ('text-width', 'f035'), ('th', 'f00a'), ('th-large', 'f009'), ('th-list', 'f00b'), ('thumb-tack', 'f08d'), ('thumbs-down', 'f165'), ('thumbs-o-down', 'f088'), ('thumbs-o-up', 'f087'), ('thumbs-up', 'f164'), ('ticket', 'f145'), ('times', 'f00d'), ('times-circle', 'f057'), ('times-circle-o', 'f05c'), ('tint', 'f043'), ('toggle-down', 'f150'), ('toggle-left', 'f191'), ('toggle-off', 'f204'), ('toggle-on', 'f205'), ('toggle-right', 'f152'), ('toggle-up', 'f151'), ('train', 'f238'), ('transgender', 'f224'), ('transgender-alt', 'f225'), ('trash', 'f1f8'), ('trash-o', 'f014'), ('tree', 'f1bb'), ('trello', 'f181'), ('trophy', 'f091'), ('truck', 'f0d1'), ('try', 'f195'), ('tty', 'f1e4'), ('tumblr', 'f173'), ('tumblr-square', 'f174'), ('turkish-lira', 'f195'), ('twitch', 'f1e8'), ('twitter', 'f099'), ('twitter-square', 'f081'), ('umbrella', 'f0e9'), ('underline', 'f0cd'), ('undo', 'f0e2'), ('university', 'f19c'), ('unlink', 'f127'), ('unlock', 'f09c'), ('unlock-alt', 'f13e'), ('unsorted', 'f0dc'), ('upload', 'f093'), ('usd', 'f155'), ('user', 'f007'), ('user-md', 'f0f0'), ('user-plus', 'f234'), ('user-secret', 'f21b'), ('user-times', 'f235'), ('users', 'f0c0'), ('venus', 'f221'), ('venus-double', 'f226'), ('venus-mars', 'f228'), ('viacoin', 'f237'), ('video-camera', 'f03d'), ('vimeo-square', 'f194'), ('vine', 'f1ca'), ('vk', 'f189'), ('volume-down', 'f027'), ('volume-off', 'f026'), ('volume-up', 'f028'), ('warning', 'f071'), ('wechat', 'f1d7'), ('weibo', 'f18a'), ('weixin', 'f1d7'), ('whatsapp', 'f232'), ('wheelchair', 'f193'), ('wifi', 'f1eb'), ('windows', 'f17a'), ('won', 'f159'), ('wordpress', 'f19a'), ('wrench', 'f0ad'), ('xing', 'f168'), ('xing-square', 'f169'), ('yahoo', 'f19e'), ('yelp', 'f1e9'), ('yen', 'f157'), ('youtube', 'f167'), ('youtube-play', 'f16a'), ('youtube-square', 'f166')], verbose_name='Icon')),
                ('size', models.CharField(default='normal', max_length=255, choices=[('normal', 'Normal'), ('lg', 'Larger'), ('2x', '2x larger'), ('3x', '3x larger'), ('4x', '4x larger'), ('5x', '5x larger'), ('10x', '10x larger'), ('15x', '15x larger'), ('20x', '20x larger'), ('25x', '25x larger')], verbose_name='Size')),
                ('spin', models.BooleanField(default=False, verbose_name='Spin')),
                ('border', models.BooleanField(default=False, verbose_name='Border')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
            ],
            options={
                'db_table': 'web_page_iconwidget',
                'permissions': [],
                'verbose_name_plural': 'Icons',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'Icon',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='InternetVideoWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('video', models.URLField(help_text='This should be a link to a youtube or vimeo video, i.e.: http://www.youtube.com/watch?v=zmj1rpzDRZ0', verbose_name='video link')),
            ],
            options={
                'db_table': 'web_page_internetvideowidget',
                'permissions': [],
                'verbose_name_plural': 'internet videos',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'internet video',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='LanguageSelectorWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
            ],
            options={
                'db_table': 'web_page_languageselectorwidget',
                'permissions': [],
                'verbose_name_plural': 'Language switches',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'Language switch',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='LinearNavigationWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('display_active', models.NullBooleanField(default=True, verbose_name='Display active')),
                ('display_in_nav', models.NullBooleanField(default=True, verbose_name='Display in navigation')),
                ('orientation', models.CharField(default='horizontal', max_length=20, choices=[('vertical', 'Vertical'), ('horizon', 'Horizon')], verbose_name='Orientation')),
                ('traverse', models.IntegerField(default=0, choices=[(0, 'none'), (1, 'parents'), (2, 'siblings'), (3, 'cousins')], verbose_name='Node traversal')),
                ('link_style', models.CharField(default='text', max_length=255, choices=[('text', 'previous/next'), ('page', 'page title')], verbose_name='Link style')),
            ],
            options={
                'db_table': 'web_page_linearnavigationwidget',
                'permissions': [],
                'verbose_name_plural': 'Linear pagers',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'Linear pager',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='MarkupTextWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('text', markupfield.fields.MarkupField(default='Empty text', blank=True, rendered_field=True, verbose_name='text')),
                ('text_markup_type', models.CharField(default='restructuredtext', choices=[('', '--'), ('html', 'HTML'), ('plain', 'Plain'), ('restructuredtext', 'Restructured Text')], max_length=30)),
                ('_text_rendered', models.TextField(editable=False)),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
            ],
            options={
                'db_table': 'web_page_markuptextwidget',
                'permissions': [],
                'verbose_name_plural': 'markup texts',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'markup text',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='MediaGalleryWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('objects_per_page', models.PositiveIntegerField(default=6, blank=True, verbose_name='Objects per page')),
                ('objects_per_row', models.PositiveIntegerField(default=3, blank=True, verbose_name='Objects per row')),
                ('pagination_style', models.CharField(default='paginator', max_length=50, choices=[('paginator', 'Paginator'), ('cycle', 'Cycle'), ('slide', 'Slide'), ('grid', 'Grid')], verbose_name='Pagination Style')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('size', models.CharField(default='small', max_length=255, choices=[('small', 'small'), ('medium', 'medium'), ('large', 'large')], verbose_name='thumbnail size')),
                ('detail', models.CharField(default='modal', max_length=255, choices=[('open_modal', 'open in modal window'), ('open_new_window', 'open new window'), ('on_page', 'disply in page')], verbose_name='detail view')),
            ],
            options={
                'db_table': 'web_page_mediagallerywidget',
                'permissions': [],
                'verbose_name_plural': 'media galleries',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'media gallery',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin, leonardo.module.web.widgets.mixins.ListMixin),
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='active')),
                ('title', models.CharField(help_text='This title is also used for navigation menu items.', max_length=200, verbose_name='title')),
                ('slug', models.SlugField(help_text='This is used to build the URL for this page', max_length=150, verbose_name='slug')),
                ('in_navigation', models.BooleanField(default=False, verbose_name='in navigation')),
                ('override_url', models.CharField(blank=True, help_text="Override the target URL. Be sure to include slashes at the beginning and at the end if it is a local URL. This affects both the navigation and subpages' URLs.", max_length=255, verbose_name='override URL')),
                ('redirect_to', models.CharField(blank=True, help_text='Target URL for automatic redirects or the primary key of a page.', max_length=255, verbose_name='redirect to')),
                ('_cached_url', models.CharField(blank=True, max_length=255, default='', db_index=True, editable=False, verbose_name='Cached URL')),
                ('layout', models.CharField(default='fixed', max_length=25, choices=[('fixed', 'Fixed'), ('fluid', 'Fluid'), ('boxed', 'Boxed')], verbose_name='Layout')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('template_key', models.CharField(default='layout_flex_flex_flex', max_length=255, choices=[('layout_flex', '1 column'), ('layout_flex_flex', '2 same columns'), ('layout_flex_fixed', '2 columns right'), ('layout_fixed_flex', '2 columns left'), ('layout_fixed_flex_fixed', '3 columns'), ('layout_flex_flex_flex', '3 same columns'), ('dashboard', 'Dashboard'), ('api', 'API')], verbose_name='template')),
                ('excerpt', models.TextField(blank=True, help_text='Add a brief excerpt summarizing the content of this page.', verbose_name='excerpt')),
                ('navigation_extension', models.CharField(choices=[('leonardo.module.media.models.media.MediaCategoriesNavigationExtension', 'All media categories'), ('leonardo.module.nav.models.FlatPageContentNavigationExtension', 'Flat page content navigation'), ('leonardo.module.nav.models.NestedPageContentNavigationExtension', 'Nested page content navigation')], blank=True, help_text='Select the module providing subpages for this page if you need to customize the navigation.', null=True, max_length=200, verbose_name='navigation extension')),
                ('_content_title', models.TextField(blank=True, help_text='The first line is the main title, the following lines are subtitles.', verbose_name='content title')),
                ('_page_title', models.CharField(blank=True, help_text='Page title for browser window. Same as title by default. Must be 69 characters or fewer.', max_length=69, verbose_name='page title')),
                ('meta_keywords', models.TextField(blank=True, help_text='Keywords are ignored by most search engines.', verbose_name='meta keywords')),
                ('meta_description', models.TextField(blank=True, help_text='This text is displayed on the search results page. It is however not used for the SEO ranking. Text longer than 140 characters is truncated.', verbose_name='meta description')),
                ('publication_date', models.DateTimeField(default=feincms.module.extensions.datepublisher.granular_now, verbose_name='publication date')),
                ('publication_end_date', models.DateTimeField(blank=True, help_text='Leave empty if the entry should stay active forever.', null=True, verbose_name='publication end date')),
                ('language', models.CharField(default='en', max_length=10, choices=[('en', 'EN'), ('cs', 'CS')], verbose_name='language')),
                ('creation_date', models.DateTimeField(editable=False, null=True, verbose_name='creation date')),
                ('modification_date', models.DateTimeField(editable=False, null=True, verbose_name='modification date')),
                ('_ct_inventory', feincms.contrib.fields.JSONField(blank=True, editable=False, null=True, verbose_name='content types')),
                ('featured', models.BooleanField(verbose_name='featured')),
            ],
            options={
                'verbose_name_plural': 'Pages',
                'verbose_name': 'Page',
                'ordering': ['tree_id', 'lft'],
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin, feincms.module.mixins.ContentModelMixin),
        ),
        migrations.CreateModel(
            name='PageColorScheme',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('styles', models.TextField(blank=True, verbose_name='Styles')),
                ('variables', models.TextField(blank=True, verbose_name='variables')),
            ],
            options={
                'verbose_name_plural': 'Page color schemes',
                'verbose_name': 'Page color scheme',
            },
        ),
        migrations.CreateModel(
            name='PageDimension',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('size', models.CharField(default='md', max_length=20, choices=[('xs', 'Extra small'), ('sm', 'Small'), ('md', 'Medium'), ('lg', 'Large')], verbose_name='Size')),
                ('col1_width', models.IntegerField(default=12, choices=[(0, ' — '), (1, '1 col'), (2, '2 cols'), (3, '3 cols'), (4, '4 cols'), (5, '5 cols'), (6, '6 cols'), (7, '7 cols'), (8, '8 cols'), (9, '9 cols'), (10, '10 cols'), (11, '11 cols'), (12, '12 cols')], verbose_name='Column 1 width')),
                ('col2_width', models.IntegerField(default=12, choices=[(0, ' — '), (1, '1 col'), (2, '2 cols'), (3, '3 cols'), (4, '4 cols'), (5, '5 cols'), (6, '6 cols'), (7, '7 cols'), (8, '8 cols'), (9, '9 cols'), (10, '10 cols'), (11, '11 cols'), (12, '12 cols')], verbose_name='Column 2 width')),
                ('col3_width', models.IntegerField(default=12, choices=[(0, ' — '), (1, '1 col'), (2, '2 cols'), (3, '3 cols'), (4, '4 cols'), (5, '5 cols'), (6, '6 cols'), (7, '7 cols'), (8, '8 cols'), (9, '9 cols'), (10, '10 cols'), (11, '11 cols'), (12, '12 cols')], verbose_name='Column 3 width')),
                ('page', models.ForeignKey(verbose_name='Page', to='web.Page')),
            ],
            options={
                'verbose_name_plural': 'Page dimensions',
                'verbose_name': 'Page dimension',
            },
        ),
        migrations.CreateModel(
            name='PageTheme',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('styles', models.TextField(blank=True, verbose_name='Style')),
                ('template', models.ForeignKey(to='dbtemplates.Template', verbose_name='Template', related_name='page_templates')),
            ],
            options={
                'verbose_name_plural': 'Page themes',
                'verbose_name': 'Page theme',
            },
        ),
        migrations.CreateModel(
            name='PageTitleWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
            ],
            options={
                'db_table': 'web_page_pagetitlewidget',
                'permissions': [],
                'verbose_name_plural': 'page titles',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'page title',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='PdfDocumentWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('height', models.CharField(blank=True, max_length=255, verbose_name='height')),
                ('width', models.CharField(blank=True, max_length=255, verbose_name='width')),
            ],
            options={
                'db_table': 'web_page_pdfdocumentwidget',
                'permissions': [],
                'verbose_name_plural': 'pdf documents',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'pdf document',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='SimpleImageWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('size', models.CharField(blank=True, max_length=255, choices=[('small', 'small'), ('medium', 'medium'), ('large', 'large')], verbose_name='size')),
                ('detail', models.CharField(blank=True, max_length=255, choices=[('open_modal', 'Open in modal window'), ('open_new_window', 'Open new window'), ('on_page', 'Display in page')], verbose_name='on click action')),
            ],
            options={
                'db_table': 'web_page_simpleimagewidget',
                'permissions': [],
                'verbose_name_plural': 'simple images',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'simple image',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='SimpleVideoWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('width', models.IntegerField(default=100, verbose_name='width')),
                ('height', models.IntegerField(default=100, verbose_name='height')),
            ],
            options={
                'db_table': 'web_page_simplevideowidget',
                'permissions': [],
                'verbose_name_plural': 'simple video',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'simple video',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='SiteHeadingWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('site_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Site Title')),
                ('tagline', models.TextField(blank=True, verbose_name='Tagline')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
            ],
            options={
                'db_table': 'web_page_siteheadingwidget',
                'permissions': [],
                'verbose_name_plural': 'site headings',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'site heading',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='SiteMapWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
            ],
            options={
                'db_table': 'web_page_sitemapwidget',
                'permissions': [],
                'verbose_name_plural': 'Site maps',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'Site map',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='SiteSearchWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('engine', models.CharField(default='google', max_length=255, choices=[('gooole', 'Google Custom Search'), ('haystack', 'Django Haystack')], verbose_name='Search engine')),
            ],
            options={
                'db_table': 'web_page_sitesearchwidget',
                'permissions': [],
                'verbose_name_plural': 'Site searches',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'Site search',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='TreeNavigationWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('display_active', models.NullBooleanField(default=True, verbose_name='Display active')),
                ('display_in_nav', models.NullBooleanField(default=True, verbose_name='Display in navigation')),
                ('orientation', models.CharField(default='horizontal', max_length=20, choices=[('vertical', 'Vertical'), ('horizon', 'Horizon')], verbose_name='Orientation')),
                ('depth', models.IntegerField(default=1, choices=[(1, 'Only one level'), (2, 'Include subpages')], verbose_name='depth')),
                ('link_style', models.CharField(default='default', max_length=255, choices=[('default', 'Default title'), ('detail', 'Detailed title')], verbose_name='Link style')),
            ],
            options={
                'db_table': 'web_page_treenavigationwidget',
                'permissions': [],
                'verbose_name_plural': 'Navigation menus',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'Navigation menu',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='UserLoginWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('type', models.PositiveIntegerField(default=2, choices=[(1, 'Admin'), (2, 'Public')], verbose_name='type')),
            ],
            options={
                'db_table': 'web_page_userloginwidget',
                'permissions': [],
                'verbose_name_plural': 'user logins',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'user login',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='UserRegistrationWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
            ],
            options={
                'db_table': 'web_page_userregistrationwidget',
                'permissions': [],
                'verbose_name_plural': 'user registrations',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'user registration',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='VectorGraphicsWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
            ],
            options={
                'db_table': 'web_page_vectorgraphicswidget',
                'permissions': [],
                'verbose_name_plural': 'Vector graphics',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'Vector graphics',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='VisualTestWidget',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('enabled', models.NullBooleanField(default=True, verbose_name='Is visible?')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('layout', models.CharField(default='inline', max_length=25, choices=[('inline', 'Inline'), ('fixed', 'Fixed'), ('fluid', 'Fluid')], verbose_name='Layout')),
                ('align', models.CharField(default='left', max_length=25, choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], verbose_name='Alignment')),
                ('vertical_align', models.CharField(default='top', max_length=25, choices=[('top', 'top'), ('middle', 'middle'), ('bottom', 'bottom')], verbose_name='Vertical Alignment')),
                ('prerendered_content', models.TextField(blank=True, verbose_name='prerendered content')),
                ('enter_effect_style', models.CharField(default='disabled', max_length=25, choices=[('disabled', 'Disabled'), ('Attention Seekers', (('bounce', 'Bounce'), ('flash', 'Flash'), ('pulse', 'Pulse'), ('rubberBand', 'RubberBand'), ('shake', 'Shake'), ('swing', 'Swin)g'), ('tada', 'Tada'), ('wobble', 'Wobble'), ('jello', 'Jello'))), ('Bouncing Entrances', (('bounceIn', 'Bounce In'), ('bounceInDown', 'Bounce In Down'), ('bounceInDown', 'BounceInDown'), ('bounceInLeft', 'BounceInLeft'), ('bounceInRight', 'BounceInRight'), ('bounceInUp', 'BounceInUp'))), ('Bouncing Exits', (('bounceIn', 'Bounce In'), ('bounceOut', 'BounceOut'), ('bounceOutDown', 'BounceOutDown'), ('bounceOutLeft', 'BounceOutLeft'), ('bounceOutRight', 'BounceOutRight'), ('bounceOutUp', 'BounceOutUp'))), ('Fading Entrances', (('fadeIn', 'fadeIn'), ('fadeInDown', 'fadeInDown'), ('fadeInDownBig', 'fadeInDownBig'), ('fadeInLeft', 'fadeInLeft'), ('fadeInLeftBig', 'fadeInLeftBig'), ('fadeInRight', 'fadeInRight'), ('fadeInRightBig', 'fadeInRightBig'), ('fadeInUp', 'fadeInUp'), ('fadeInUpBig', 'fadeInUpBig'))), ('Fading Exits', (('fadeOut', 'fadeOut'), ('fadeOutDown', 'fadeOutDown'), ('fadeOutDownBig', 'fadeOutDownBig'), ('fadeOutLeft', 'fadeOutLeft'), ('fadeOutLeftBig', 'fadeOutLeftBig'), ('fadeOutRight', 'fadeOutRight'), ('fadeOutRightBig', 'fadeOutRightBig'), ('fadeOutUp', 'fadeOutUp'), ('fadeOutUpBig', 'fadeOutUpBig'))), ('Flippers', (('flip', 'flip'), ('flipInX', 'flipInX'), ('flipInY', 'flipInY'), ('flipOutX', 'flipOutX'), ('flipOutY', 'flipOutY'))), ('Lightspeed', (('lightSpeedIn', 'lightSpeedIn'), ('lightSpeedOut', 'lightSpeedOut'))), ('Rotating Entrances', (('rotateIn', 'rotateIn'), ('rotateInDownLeft', 'rotateInDownLeft'), ('rotateInDownRight', 'rotateInDownRight'), ('rotateInUpLeft', 'rotateInUpLeft'), ('rotateInUpRight', 'rotateInUpRight'))), ('Rotating Exits', (('rotateOut', 'rotateOut'), ('rotateOutDownLeft', 'rotateOutDownLeft'), ('rotateOutDownRight', 'rotateOutDownRight'), ('rotateOutUpLeft', 'rotateOutUpLeft'), ('rotateOutUpRight', 'rotateOutUpRight'))), ('Sliding Entrances', (('slideInUp', 'slideInUp'), ('slideInDown', 'slideInDown'), ('slideInLeft', 'slideInLeft'), ('slideInRight', 'slideInRight'))), ('Sliding Exits', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Entrances', (('slideOutUp', 'slideOutUp'), ('slideOutDown', 'slideOutDown'), ('slideOutLeft', 'slideOutLeft'), ('slideOutRight', 'slideOutRight'))), ('Zoom Exits', (('zoomIn', 'zoomIn'), ('zoomInDown', 'zoomInDown'), ('zoomInLeft', 'zoomInLeft'), ('zoomInRight', 'zoomInRight'), ('zoomInUp', 'zoomInUp'))), ('Specials', (('hinge', 'hinge'), ('rollIn', 'rollIn'), ('rollOut', 'rollOut')))], verbose_name='Enter effect style')),
                ('enter_effect_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enter Effect Duration')),
                ('enter_effect_delay', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_offset', models.PositiveIntegerField(blank=True, null=True)),
                ('enter_effect_iteration', models.PositiveIntegerField(blank=True, null=True)),
                ('color_scheme', models.CharField(default='default', max_length=25, choices=[('Brand styles', (('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('custom', 'Custom'), ('red', 'Red'), ('blue', 'Blue')))], verbose_name='Color scheme')),
                ('region', models.CharField(max_length=255)),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('test', models.CharField(default='general', max_length=255, choices=[('para', 'Paragraphs'), ('list', 'Lists'), ('heading', 'Headings'), ('table', 'Tables'), ('form', 'Forms'), ('button', 'Buttons'), ('typo', 'Typography'), ('grid', 'Grid'), ('icon', 'Icons')], verbose_name='type of test')),
            ],
            options={
                'db_table': 'web_page_visualtestwidget',
                'permissions': [],
                'verbose_name_plural': 'visual testers',
                'ordering': ['ordering'],
                'abstract': False,
                'verbose_name': 'visual tester',
            },
            bases=(models.Model, feincms.extensions.ExtensionsMixin),
        ),
        migrations.CreateModel(
            name='WidgetBaseTheme',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('style', models.TextField(blank=True, verbose_name='Base style')),
                ('template', models.ForeignKey(to='dbtemplates.Template', verbose_name='Base template', related_name='base_templates')),
            ],
            options={
                'verbose_name_plural': 'Widget base themes',
                'verbose_name': 'Widget base theme',
            },
        ),
        migrations.CreateModel(
            name='WidgetContentTheme',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('style', models.TextField(blank=True, verbose_name='Content style')),
                ('widget_class', models.CharField(max_length=255, verbose_name='Widget class')),
                ('template', models.ForeignKey(to='dbtemplates.Template', verbose_name='Content template', related_name='content_templates')),
            ],
            options={
                'verbose_name_plural': 'Widget content themes',
                'verbose_name': 'Widget content theme',
            },
        ),
        migrations.CreateModel(
            name='WidgetDimension',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, auto_created=True, verbose_name='ID')),
                ('widget_id', models.PositiveIntegerField()),
                ('size', models.CharField(default='md', max_length=20, choices=[('xs', 'Extra small'), ('sm', 'Small'), ('md', 'Medium'), ('lg', 'Large')], verbose_name='Size')),
                ('width', models.IntegerField(default=12, choices=[(0, ' — '), (1, '1 col'), (2, '2 cols'), (3, '3 cols'), (4, '4 cols'), (5, '5 cols'), (6, '6 cols'), (7, '7 cols'), (8, '8 cols'), (9, '9 cols'), (10, '10 cols'), (11, '11 cols'), (12, '12 cols')], verbose_name='Width')),
                ('height', models.IntegerField(default=0, choices=[(0, ' — '), (1, '1 row'), (2, '2 rows'), (3, '3 rows'), (4, '4 rows'), (5, '5 rows'), (6, '6 rows'), (7, '7 rows'), (8, '8 rows'), (9, '9 rows'), (10, '10 rows'), (11, '11 rows'), (12, '12 rows'), (13, '13 row'), (14, '14 rows'), (15, '15 rows'), (16, '16 rows'), (17, '17 rows'), (18, '18 rows'), (19, '19 rows'), (20, '20 rows'), (21, '21 rows'), (22, '22 rows'), (23, '23 rows'), (24, '24 rows')], verbose_name='Height')),
                ('offset', models.IntegerField(default=0, choices=[(0, ' — '), (1, '1 col'), (2, '2 cols'), (3, '3 cols'), (4, '4 cols'), (5, '5 cols'), (6, '6 cols'), (7, '7 cols'), (8, '8 cols'), (9, '9 cols'), (10, '10 cols'), (11, '11 cols'), (12, '12 cols')], verbose_name='Offset')),
                ('widget_type', models.ForeignKey(to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name_plural': 'Widget dimensions',
                'verbose_name': 'Widget dimension',
            },
        ),
        migrations.AddField(
            model_name='visualtestwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_visualtestwidget_related'),
        ),
        migrations.AddField(
            model_name='visualtestwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_visualtestwidget_related'),
        ),
        migrations.AddField(
            model_name='visualtestwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='visualtestwidget_set'),
        ),
        migrations.AddField(
            model_name='vectorgraphicswidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_vectorgraphicswidget_related'),
        ),
        migrations.AddField(
            model_name='vectorgraphicswidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_vectorgraphicswidget_related'),
        ),
        migrations.AddField(
            model_name='vectorgraphicswidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='vectorgraphicswidget_set'),
        ),
        migrations.AddField(
            model_name='vectorgraphicswidget',
            name='source',
            field=models.ForeignKey(to='media.Vector', related_name='web_vectorgraphicswidget_related'),
        ),
        migrations.AddField(
            model_name='userregistrationwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_userregistrationwidget_related'),
        ),
        migrations.AddField(
            model_name='userregistrationwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_userregistrationwidget_related'),
        ),
        migrations.AddField(
            model_name='userregistrationwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='userregistrationwidget_set'),
        ),
        migrations.AddField(
            model_name='userloginwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_userloginwidget_related'),
        ),
        migrations.AddField(
            model_name='userloginwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_userloginwidget_related'),
        ),
        migrations.AddField(
            model_name='userloginwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='userloginwidget_set'),
        ),
        migrations.AddField(
            model_name='treenavigationwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_treenavigationwidget_related'),
        ),
        migrations.AddField(
            model_name='treenavigationwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_treenavigationwidget_related'),
        ),
        migrations.AddField(
            model_name='treenavigationwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='treenavigationwidget_set'),
        ),
        migrations.AddField(
            model_name='treenavigationwidget',
            name='root',
            field=models.ForeignKey(related_name='taxonomy_root', blank=True, to='web.Page', help_text="If not set, widget's parent page will be used as root page.", null=True, verbose_name='root page'),
        ),
        migrations.AddField(
            model_name='sitesearchwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_sitesearchwidget_related'),
        ),
        migrations.AddField(
            model_name='sitesearchwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_sitesearchwidget_related'),
        ),
        migrations.AddField(
            model_name='sitesearchwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='sitesearchwidget_set'),
        ),
        migrations.AddField(
            model_name='sitemapwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_sitemapwidget_related'),
        ),
        migrations.AddField(
            model_name='sitemapwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_sitemapwidget_related'),
        ),
        migrations.AddField(
            model_name='sitemapwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='sitemapwidget_set'),
        ),
        migrations.AddField(
            model_name='sitemapwidget',
            name='root',
            field=models.ForeignKey(related_name='sitemap_root', blank=True, to='web.Page', help_text="If no root page is set, widget's parent page will be used.", null=True, verbose_name='Root page'),
        ),
        migrations.AddField(
            model_name='siteheadingwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_siteheadingwidget_related'),
        ),
        migrations.AddField(
            model_name='siteheadingwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_siteheadingwidget_related'),
        ),
        migrations.AddField(
            model_name='siteheadingwidget',
            name='logo',
            field=models.ForeignKey(related_name='web_siteheadingwidget_images', blank=True, to='media.Image', null=True, verbose_name='Logo'),
        ),
        migrations.AddField(
            model_name='siteheadingwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='siteheadingwidget_set'),
        ),
        migrations.AddField(
            model_name='simplevideowidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_simplevideowidget_related'),
        ),
        migrations.AddField(
            model_name='simplevideowidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_simplevideowidget_related'),
        ),
        migrations.AddField(
            model_name='simplevideowidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='simplevideowidget_set'),
        ),
        migrations.AddField(
            model_name='simplevideowidget',
            name='thumb',
            field=models.ForeignKey(related_name='web_simplevideowidget_thumbnails', blank=True, to='media.Image', null=True, verbose_name='thumbnail'),
        ),
        migrations.AddField(
            model_name='simplevideowidget',
            name='video',
            field=models.ForeignKey(to='media.Video', verbose_name='video', related_name='web_simplevideowidget_videos'),
        ),
        migrations.AddField(
            model_name='simpleimagewidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_simpleimagewidget_related'),
        ),
        migrations.AddField(
            model_name='simpleimagewidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_simpleimagewidget_related'),
        ),
        migrations.AddField(
            model_name='simpleimagewidget',
            name='image',
            field=models.ForeignKey(to='media.Image', verbose_name='image', related_name='web_simpleimagewidget_images'),
        ),
        migrations.AddField(
            model_name='simpleimagewidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='simpleimagewidget_set'),
        ),
        migrations.AddField(
            model_name='pdfdocumentwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_pdfdocumentwidget_related'),
        ),
        migrations.AddField(
            model_name='pdfdocumentwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_pdfdocumentwidget_related'),
        ),
        migrations.AddField(
            model_name='pdfdocumentwidget',
            name='file',
            field=models.ForeignKey(to='media.Document', verbose_name='pdf document', related_name='web_pdfdocumentwidget_related'),
        ),
        migrations.AddField(
            model_name='pdfdocumentwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='pdfdocumentwidget_set'),
        ),
        migrations.AddField(
            model_name='pagetitlewidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_pagetitlewidget_related'),
        ),
        migrations.AddField(
            model_name='pagetitlewidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_pagetitlewidget_related'),
        ),
        migrations.AddField(
            model_name='pagetitlewidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='pagetitlewidget_set'),
        ),
        migrations.AddField(
            model_name='pagecolorscheme',
            name='theme',
            field=models.ForeignKey(to='web.PageTheme', verbose_name='Template', related_name='templates'),
        ),
        migrations.AddField(
            model_name='page',
            name='color_scheme',
            field=models.ForeignKey(verbose_name='Color scheme', to='web.PageColorScheme'),
        ),
        migrations.AddField(
            model_name='page',
            name='parent',
            field=models.ForeignKey(related_name='children', blank=True, to='web.Page', null=True, verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='page',
            name='related_pages',
            field=models.ManyToManyField(blank=True, to='web.Page', help_text='Select pages that should be listed as related content.', related_name='web_page_related'),
        ),
        migrations.AddField(
            model_name='page',
            name='site',
            field=models.ForeignKey(default=1, to='sites.Site', verbose_name='Site'),
        ),
        migrations.AddField(
            model_name='page',
            name='symlinked_page',
            field=models.ForeignKey(related_name='web_page_symlinks', blank=True, to='web.Page', help_text='All content is inherited from this page if given.', null=True, verbose_name='symlinked page'),
        ),
        migrations.AddField(
            model_name='page',
            name='theme',
            field=models.ForeignKey(verbose_name='Theme', to='web.PageTheme'),
        ),
        migrations.AddField(
            model_name='page',
            name='translation_of',
            field=models.ForeignKey(related_name='translations', blank=True, to='web.Page', help_text='Leave this empty for entries in the primary language.', null=True, verbose_name='translation of'),
        ),
        migrations.AddField(
            model_name='mediagallerywidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_mediagallerywidget_related'),
        ),
        migrations.AddField(
            model_name='mediagallerywidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_mediagallerywidget_related'),
        ),
        migrations.AddField(
            model_name='mediagallerywidget',
            name='folder',
            field=models.ForeignKey(to='media.Folder', verbose_name='Directory', related_name='web_mediagallerywidget_folders'),
        ),
        migrations.AddField(
            model_name='mediagallerywidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='mediagallerywidget_set'),
        ),
        migrations.AddField(
            model_name='markuptextwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_markuptextwidget_related'),
        ),
        migrations.AddField(
            model_name='markuptextwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_markuptextwidget_related'),
        ),
        migrations.AddField(
            model_name='markuptextwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='markuptextwidget_set'),
        ),
        migrations.AddField(
            model_name='linearnavigationwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_linearnavigationwidget_related'),
        ),
        migrations.AddField(
            model_name='linearnavigationwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_linearnavigationwidget_related'),
        ),
        migrations.AddField(
            model_name='linearnavigationwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='linearnavigationwidget_set'),
        ),
        migrations.AddField(
            model_name='languageselectorwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_languageselectorwidget_related'),
        ),
        migrations.AddField(
            model_name='languageselectorwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_languageselectorwidget_related'),
        ),
        migrations.AddField(
            model_name='languageselectorwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='languageselectorwidget_set'),
        ),
        migrations.AddField(
            model_name='internetvideowidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_internetvideowidget_related'),
        ),
        migrations.AddField(
            model_name='internetvideowidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_internetvideowidget_related'),
        ),
        migrations.AddField(
            model_name='internetvideowidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='internetvideowidget_set'),
        ),
        migrations.AddField(
            model_name='iconwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_iconwidget_related'),
        ),
        migrations.AddField(
            model_name='iconwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_iconwidget_related'),
        ),
        migrations.AddField(
            model_name='iconwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='iconwidget_set'),
        ),
        migrations.AddField(
            model_name='htmltextwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_htmltextwidget_related'),
        ),
        migrations.AddField(
            model_name='htmltextwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_htmltextwidget_related'),
        ),
        migrations.AddField(
            model_name='htmltextwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='htmltextwidget_set'),
        ),
        migrations.AddField(
            model_name='flashobjectwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_flashobjectwidget_related'),
        ),
        migrations.AddField(
            model_name='flashobjectwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_flashobjectwidget_related'),
        ),
        migrations.AddField(
            model_name='flashobjectwidget',
            name='file',
            field=models.ForeignKey(to='media.Flash', verbose_name='flash file', related_name='web_flashobjectwidget_categories'),
        ),
        migrations.AddField(
            model_name='flashobjectwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='flashobjectwidget_set'),
        ),
        migrations.AddField(
            model_name='feedreaderwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_feedreaderwidget_related'),
        ),
        migrations.AddField(
            model_name='feedreaderwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_feedreaderwidget_related'),
        ),
        migrations.AddField(
            model_name='feedreaderwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='feedreaderwidget_set'),
        ),
        migrations.AddField(
            model_name='downloadlistwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_downloadlistwidget_related'),
        ),
        migrations.AddField(
            model_name='downloadlistwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_downloadlistwidget_related'),
        ),
        migrations.AddField(
            model_name='downloadlistwidget',
            name='folder',
            field=models.ForeignKey(to='media.Folder', verbose_name='folder', related_name='web_downloadlistwidget_folders'),
        ),
        migrations.AddField(
            model_name='downloadlistwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='downloadlistwidget_set'),
        ),
        migrations.AddField(
            model_name='downloaditemwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_downloaditemwidget_related'),
        ),
        migrations.AddField(
            model_name='downloaditemwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_downloaditemwidget_related'),
        ),
        migrations.AddField(
            model_name='downloaditemwidget',
            name='file',
            field=models.ForeignKey(to='media.File', verbose_name='file', related_name='web_downloaditemwidget_files'),
        ),
        migrations.AddField(
            model_name='downloaditemwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='downloaditemwidget_set'),
        ),
        migrations.AddField(
            model_name='contextnavigationwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_contextnavigationwidget_related'),
        ),
        migrations.AddField(
            model_name='contextnavigationwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_contextnavigationwidget_related'),
        ),
        migrations.AddField(
            model_name='contextnavigationwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='contextnavigationwidget_set'),
        ),
        migrations.AddField(
            model_name='contextnavigationwidget',
            name='root',
            field=models.ForeignKey(related_name='context_root', blank=True, to='web.Page', help_text='The child pages of root page are displayed in the context navigation.', null=True, verbose_name='Source page'),
        ),
        migrations.AddField(
            model_name='contentnavigationwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_contentnavigationwidget_related'),
        ),
        migrations.AddField(
            model_name='contentnavigationwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_contentnavigationwidget_related'),
        ),
        migrations.AddField(
            model_name='contentnavigationwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='contentnavigationwidget_set'),
        ),
        migrations.AddField(
            model_name='clientinfowidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_clientinfowidget_related'),
        ),
        migrations.AddField(
            model_name='clientinfowidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_clientinfowidget_related'),
        ),
        migrations.AddField(
            model_name='clientinfowidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='clientinfowidget_set'),
        ),
        migrations.AddField(
            model_name='breadcrumbswidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_breadcrumbswidget_related'),
        ),
        migrations.AddField(
            model_name='breadcrumbswidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_breadcrumbswidget_related'),
        ),
        migrations.AddField(
            model_name='breadcrumbswidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='breadcrumbswidget_set'),
        ),
        migrations.AddField(
            model_name='applicationwidget',
            name='base_theme',
            field=models.ForeignKey(to='web.WidgetBaseTheme', verbose_name='Base theme', related_name='web_applicationwidget_related'),
        ),
        migrations.AddField(
            model_name='applicationwidget',
            name='content_theme',
            field=models.ForeignKey(to='web.WidgetContentTheme', verbose_name='Content theme', related_name='web_applicationwidget_related'),
        ),
        migrations.AddField(
            model_name='applicationwidget',
            name='parent',
            field=models.ForeignKey(to='web.Page', related_name='applicationwidget_set'),
        ),
    ]
